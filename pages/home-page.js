import './components/planet-card.js';
import './components/planet-filter.js';
import './components/profile-summary.js';
import './components/planet-stats.js';
import apiService from './services/api-service.js';
class HomePage extends HTMLElement {
  constructor() {
    super();
    this.planets = [];
    this.filterOptions = [];
    
    // Get the initial filter from localStorage
    this.currentFilter = localStorage.getItem('planet-filter') || 'all';
    this.isLoading = true;
  }

  async connectedCallback() {
    // Initial render with loading state
    this.render();
    
    // Listen for filter change events
    this.addEventListener('filter-changed', (event) => {
      this.currentFilter = event.detail.selected;
      this.renderPlanets();
    });
    
    try {
      // Load data from API
      const [planets, filterOptions] = await Promise.all([
        apiService.getPlanets(),
        apiService.getFilterOptions()
      ]);
      
      this.planets = planets;
      this.filterOptions = filterOptions;
      this.isLoading = false;
      
      // Dispatch planets-loaded event for components that need to know about planets
      this.dispatchEvent(new CustomEvent('planets-loaded', {
        bubbles: true,
        detail: { 
          planets: this.planets 
        }
      }));
      
      // Re-render with data
      this.render();
      setTimeout(() => this.renderPlanets(), 0);
      } catch (error) {
      console.error('Failed to load initial data:', error);
      this.isLoading = false;
      this.render();
    }
  }
  
  // Filter planets based on the current filter
  getFilteredPlanets() {
    if (this.currentFilter === 'all') {
      return this.planets;
    } else {
      return this.planets.filter(planet => planet.type === this.currentFilter);
    }
  }
  
  // Render the planets section
  renderPlanets() {
    const container = this.querySelector('.planets-container');
    if (!container) return;
    
    if (this.isLoading) {
      container.innerHTML = `
        <div class="loading-spinner">
          <div class="spinner"></div>
          <p>–ì–∞—Ä–∏–≥—É—É–¥—ã–Ω –º—ç–¥—ç—ç–ª—ç–ª –∞—á–∞–∞–ª–ª–∞–∂ –±–∞–π–Ω–∞...</p>
        </div>
      `;
      return;
    }
    
    const filteredPlanets = this.getFilteredPlanets();
    
    if (filteredPlanets.length === 0) {
      container.innerHTML = '<p>–•–∞–π–ª—Ç–∞–¥ —Ç–æ—Ö–∏—Ä–æ—Ö –≥–∞—Ä–∏–≥—É—É–¥ –æ–ª–¥—Å–æ–Ω–≥“Ø–π.</p>';
      return;
    }
    
    // Map the filtered planets to planet-card elements
    container.innerHTML = filteredPlanets.map(planet => {
      // Safely encode JSON to prevent issues with quotes
      const planetData = JSON.stringify(planet).replace(/'/g, '&#39;');
      return `<planet-card data='${planetData}'></planet-card>`;
    }).join('');
  }

  render() {
    this.innerHTML = `
      <div class="container">
        <div class="galaxy-background">
          <h2>–û—Ä—á–ª–æ–Ω –µ—Ä—Ç”©–Ω—Ü–∏–π–Ω –≥–∞–π—Ö–∞–º—à–≥–∏–π–≥ –Ω—ç—ç—Ü–≥—ç—ç–µ</h2>
        </div>

        <!-- Entertainment Section -->
        <section id="entertainment">
          <h2>–≠–Ω—Ç–µ—Ä—Ç–µ–π–Ω–º–µ–Ω—Ç</h2>
          <div class="grid-container">
            <article>
              <a href="https://www.youtube.com/watch?v=zSWdZVtXT7E" target="_blank" class="video-link">
                <img src="images/space-movie.jpg" alt="Space Movie">
                <div class="play-button"></div>
              </a>
              <h3>–®–∏–ª–¥—ç–≥ —Å–∞–Ω—Å—Ä—ã–Ω –∫–∏–Ω–æ–Ω—ã –∂–∞–≥—Å–∞–∞–ª—Ç</h3>
              <p>–•–∞–º–≥–∏–π–Ω —à–∏–Ω–∂–ª—ç—Ö —É—Ö–∞–∞–Ω—ã “Ø–Ω—ç–Ω –∑”©–≤ —Å–∞–Ω—Å—Ä—ã–Ω –∫–∏–Ω–æ.</p>
            </article>
            <article>
              <a href="https://www.youtube.com/watch?v=udFxKZRyQt4" target="_blank" class="video-link">
                <img src="images/neutron-star.jpg" alt="Space Books">
                <div class="play-button"></div>
              </a>
              <h3>–ù–µ–π—Ç—Ä–æ–Ω –æ–¥ –≥—ç–∂ —é—É –≤—ç?</h3>
              <p>–ù–µ–π—Ç—Ä–æ–Ω –æ–¥ –≥—ç–∂ —é—É –±–æ–ª–æ—Ö –º–∞–Ω–∞–π –Ω–∞—Ä–Ω–∞–∞—Å —é—É–≥–∞–∞—Ä–∞–∞ —è–ª–≥–∞–∞—Ç–∞–π —Ç–∞–ª–∞–∞—Ä –æ–ª–∂ –º—ç–¥—ç—ç—Ä—ç–π.</p>
            </article>
            <article>
              <a href="https://www.youtube.com/watch?v=QqsLTNkzvaY" target="_blank" class="video-link">
                <img src="images/blackholefall.jpg" alt="Space Games">
                <div class="play-button"></div>
              </a>
              <h3>–•—ç—Ä—ç–≤ —Ç–∞ —Ö–∞—Ä –Ω“Ø—Ö—ç–Ω–¥ —É–Ω–∞–≤–∞–ª —è–∞—Ö –≤—ç?</h3>
              <p>–•–∞—Ä –Ω“Ø—Ö –±–æ–ª –æ—Ä—á–ª–æ–Ω –µ—Ä—Ç”©–Ω—Ü–∏–π–Ω —Ö–∞–º–≥–∏–π–Ω —Ö“Ø—á–∏—Ä—Ö—ç–≥ –∑“Ø–π–ª –±”©–≥”©”©–¥ —Ç—ç–¥ “Ø–Ω—ç—Ö—ç—ç—Ä —Ö–∞—á–∏—Ä—Ö–∞–ª—Ç–∞–π, —Ç”©–≤”©–≥—Ç—ç–π —é–º. –•—ç—Ä—ç–≤ —Ç–∞ –Ω—ç–≥ –¥–æ—Ç–æ—Ä —É–Ω–∞–≤–∞–ª —é—É –±–æ–ª–æ—Ö –≤—ç?.</p>
            </article>
          </div>
        </section>

        <!-- Exoplanets Section -->
        <section id="exoplanets">
          <h2>–≠–∫–∑–æ–≥–∞—Ä–∏–≥—É—É–¥</h2>
          
          <!-- Add our planet-stats component here -->
          <planet-stats></planet-stats>
          
          <div class="filter-section">
            <planet-filter 
              options='${JSON.stringify(this.filterOptions)}' 
              selected="${this.currentFilter}">
            </planet-filter>
            
            <profile-summary></profile-summary>
          </div>
          
          <div class="planets-container">
            <!-- Planets will be rendered here -->
          </div>
        </section>

        <!-- Galaxy Section -->
        <section id="galaxy" class="video-section">
          <h2>–ì–∞–ª–∞–∫—Ç–∏–∫ —Å—É–¥–ª–∞–ª</h2>
          <div class="video-container">
            <video style="width: 100%;" controls poster="images/galaxy-poster.jpg">
              <source src="videos/galaxy-tour.mp4" type="video/mp4">
              <source src="videos/galaxy-tour.webm" type="video/webm">
              –¢–∞–Ω—ã –≤—ç–± —Ö”©—Ç”©—á –≤–∏–¥–µ–æ —Ç–æ–≥–ª—É—É–ª–∞—Ö –±–æ–ª–æ–º–∂–≥“Ø–π –±–∞–π–Ω–∞.
            </video>
          </div>
          <p style="text-align: center; margin-top: 20px;">–ú–∞–Ω–∞–π –°“Ø“Ø–Ω –ó–∞–º –≥–∞–ª–∞–∫—Ç–∏–∫ –±–æ–ª–æ–Ω –±—É—Å–∞–¥ –≥–∞–ª–∞–∫—Ç–∏–∫—É—É–¥–∞–∞—Ä –≤–∏—Ä—Ç—É–∞–ª –∞—è–ª–∞–ª —Ö–∏–π–≥—ç—ç—Ä—ç–π.</p>
        </section>

        <!-- Media Section -->
        <section id="media">
          <h2>–°–∞–Ω—Å—Ä—ã–Ω –¥—É—É —á–∏–º—ç—ç</h2>
          <div class="audio-player">
            <h3 class="audio-title">–ë–∞—Ä—Ö–∞—Å–±–∞–¥—å –≥–∞—Ä–∏–≥–∏–π–Ω –¥—É—É —á–∏–º—ç—ç</h3>
            <audio controls>
              <source src="audio/cosmic-background.mp3" type="audio/mpeg">
              <source src="audio/cosmic-background.ogg" type="audio/ogg">
              –¢–∞–Ω—ã –≤—ç–± —Ö”©—Ç”©—á –∞—É–¥–∏–æ —Ç–æ–≥–ª—É—É–ª–∞—Ö –±–æ–ª–æ–º–∂–≥“Ø–π –±–∞–π–Ω–∞.
            </audio>
            <p style="text-align: center; margin-top: 10px;">–ë–∞—Ä—Ö–∞—Å–±–∞–¥—å –≥–∞—Ä–∏–≥–∞–∞—Å –∏—Ä—Å—ç–Ω —Ü–∞—Ö–∏–ª–≥–∞–∞–Ω —Å–æ—Ä–æ–Ω–∑–æ–Ω –¥–æ–ª–≥–∏–æ–Ω—ã–≥ —Å–æ–Ω—Å–æ–≥–¥–æ—Ö—É–π—Ü –¥—É—É–Ω—ã —Ö—ç–ª–±—ç—Ä—Ç —Ö”©—Ä–≤“Ø“Ø–ª—Å—ç–Ω..</p>
          </div>
        </section>
      </div>
    `;
    
    // Add theme toggle functionality
    const themeToggle = document.querySelector('#themeToggle');
    if (!themeToggle) {
      const toggle = document.createElement('button');
      toggle.id = 'themeToggle';
      toggle.className = 'theme-toggle';
      toggle.textContent = 'üåû / üåô';
      toggle.addEventListener('click', () => {
        const currentTheme = document.documentElement.getAttribute('data-theme');
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        
        document.documentElement.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);
      });
      this.querySelector('.container').prepend(toggle);
    }
  }
}

customElements.define('home-page', HomePage);

export default HomePage;